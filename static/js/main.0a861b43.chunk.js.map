{"version":3,"sources":["context.js","Todo/TodoItem.js","Todo/TodoList.js","Loader.js","Modal/Modal.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","styles","li","display","justifyContent","alignItems","padding","border","borderRadius","marginBottom","input","marginRight","TodoItem","todo","index","onChange","removeTodo","useContext","classes","completed","push","style","className","join","type","checked","id","title","onClick","bind","ul","listStyle","margin","TodoList","props","todos","map","onToggle","Modal","state","isOpen","Fragment","setState","this","Component","AddTodo","lazy","Promise","resolve","setTimeout","App","useState","setTodos","loading","setLoading","useEffect","fetch","then","response","json","Provider","value","filter","Suspense","fallback","Loader","onCreate","concat","Date","now","length","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0a861b43.chunk.js","sourcesContent":["import React from 'react'\n\nconst Context = React.createContext()\n\nexport default Context\n","import React, { useContext } from 'react'\nimport PropTypes from 'prop-types'\nimport Context from '../context'\n\nconst styles = {\n  li: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '.5rem 1rem',\n    border: '1px solid #ccc',\n    borderRadius: '4px',\n    marginBottom: '.5rem'\n  },\n  input: {\n    marginRight: '1rem'\n  }\n}\n\nfunction TodoItem({ todo, index, onChange }) {\n  const { removeTodo } = useContext(Context)\n  const classes = []\n\n  if (todo.completed) {\n    classes.push('done')\n  }\n\n  return (\n    <li style={styles.li}>\n      <span className={classes.join(' ')}>\n        <input\n          type='checkbox'\n          checked={todo.completed}\n          style={styles.input}\n          onChange={() => onChange(todo.id)}\n        />\n        <strong>{index + 1}</strong>\n        &nbsp;\n        {todo.title}\n      </span>\n\n      <button className='rm' onClick={removeTodo.bind(null, todo.id)}>\n        &times;\n      </button>\n    </li>\n  )\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.object.isRequired,\n  index: PropTypes.number,\n  onChange: PropTypes.func.isRequired\n}\n\nexport default TodoItem\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport TodoItem from './TodoItem'\n\nconst styles = {\n  ul: {\n    listStyle: 'none',\n    margin: 0,\n    padding: 0\n  }\n}\n\nfunction TodoList(props) {\n  return (\n    <ul style={styles.ul}>\n      {props.todos.map((todo, index) => {\n        return (\n          <TodoItem\n            todo={todo}\n            key={todo.id}\n            index={index}\n            onChange={props.onToggle}\n          />\n        )\n      })}\n    </ul>\n  )\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onToggle: PropTypes.func.isRequired\n}\n\nexport default TodoList\n","import React from 'react'\n\nexport default () => (\n  <div style={{ display: 'flex', justifyContent: 'center', margin: '.5rem' }}>\n    <div className='lds-dual-ring' />\n  </div>\n)\n","import React from 'react'\nimport './Modal.css'\n\nexport default class Modal extends React.Component {\n  state = {\n    isOpen: false\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <button className=\"modal-btn\" onClick={() => this.setState({ isOpen: true })}>\n          –û—Ç–∫—Ä—ã—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä—å\n        </button>\n\n        {this.state.isOpen && (\n          <div className='modal'>\n            <div className='modal-body'>\n              <h1>–ö–∞–ª–µ–Ω–¥–∞—Ä—å</h1>\n              <p>–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</p>\n              <button onClick={() => this.setState({ isOpen: false })}>\n                –ó–∞–∫—Ä—ã—Ç—å\n              </button>\n            </div>\n          </div>\n        )}\n      </React.Fragment>\n    )\n  }\n}\n","import React, { useEffect } from 'react'\nimport TodoList from './Todo/TodoList'\nimport Context from './context'\nimport Loader from './Loader'\nimport Modal from './Modal/Modal'\n\nconst AddTodo = React.lazy(\n  () =>\n    new Promise(resolve => {\n      setTimeout(() => {\n        resolve(import('./Todo/AddTodo'))\n      }, 3000)\n    })\n)\n\nfunction App() {\n  const [todos, setTodos] = React.useState([])\n  const [loading, setLoading] = React.useState(true)\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/todos?_limit=5')\n      .then(response => response.json())\n      .then(todos => {\n        setTimeout(() => {\n          setTodos(todos)\n          setLoading(false)\n        }, 2000)\n      })\n  }, [])\n\n  function toggleTodo(id) {\n    setTodos(\n      todos.map(todo => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed\n        }\n        return todo\n      })\n    )\n  }\n\n  function removeTodo(id) {\n    setTodos(todos.filter(todo => todo.id !== id))\n  }\n\n  function addTodo(title) {\n    setTodos(\n      todos.concat([\n        {\n          title,\n          id: Date.now(),\n          completed: false\n        }\n      ])\n    )\n  }\n\n  return (\n    <Context.Provider value={{ removeTodo }}>\n      <div className='wrapper'>\n        <h1>–ú–æ–π —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á üë®üèª‚Äçüíª</h1>\n        <Modal />\n\n        <React.Suspense fallback={<Loader />}>\n          <AddTodo onCreate={addTodo} />\n        </React.Suspense>\n\n        {loading && <Loader />}\n        {todos.length ? (\n          <TodoList todos={todos} onToggle={toggleTodo} />\n        ) : loading ? null : (\n          <p>No todos!</p>\n        )}\n      </div>\n    </Context.Provider>\n  )\n}\n\nexport default App\n","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n\n        checkValidServiceWorker(swUrl, config);\n\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}